name: Deploy to Self-Hosted Runner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Clean workspace
        run: |
          rm -rf ./* || true
          rm -rf ./.* || true

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Stop existing containers
        run: |
          docker-compose down || true

      - name: Copy database
        run: |
          mkdir -p ./prisma
          if [ -f ../prisma/dev.db ]; then
            echo "Copying existing database..."
            cp ../prisma/dev.db ./prisma/dev.db
          else
            echo "No existing database found, will create new one"
          fi

      - name: Pull latest images
        run: |
          docker-compose pull

      - name: Start application
        run: |
          docker-compose up -d
          # Wait for container to be running
          timeout=60
          until docker-compose ps | grep -q "Up" || [ $timeout -eq 0 ]; do
            echo "Waiting for container to start..."
            sleep 5
            timeout=$((timeout-5))
          done
          if [ $timeout -eq 0 ]; then
            echo "Container failed to start within the timeout period"
            docker-compose logs
            exit 1
          fi

      - name: Wait for application to be ready
        run: |
          timeout=300
          until curl -s http://localhost:3000 > /dev/null || [ $timeout -eq 0 ]; do
            echo "Waiting for application to be ready..."
            sleep 5
            timeout=$((timeout-5))
            # Show container logs if application is not responding
            if [ $((timeout % 30)) -eq 0 ]; then
              docker-compose logs
            fi
          done
          if [ $timeout -eq 0 ]; then
            echo "Application failed to start within the timeout period"
            docker-compose logs
            exit 1
          fi
          echo "Application is ready!"

volumes:
  - ./prisma:/app/prisma 
