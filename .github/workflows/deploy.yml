name: Deploy to Self-Hosted Runner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Ensure database file permissions
        run: |
          mkdir -p ../../ai-test-management-db
          touch ../../ai-test-management-db/dev.db
          chmod 666 ../../ai-test-management-db/dev.db

      - name: Backup database from container (if exists)
        run: |
          docker cp $(docker-compose ps -q app):/app/prisma/dev.db ../../ai-test-management-db/dev.db || true

      - name: Stop existing containers
        run: |
          docker-compose down || true

      - name: Start application
        run: |
          docker-compose up -d --build
          timeout=100
          until docker-compose ps | grep -q "Up" || [ $timeout -eq 0 ]; do
            echo "Waiting for container to start..."
            sleep 5
            timeout=$((timeout-5))
          done
          if [ $timeout -eq 0 ]; then
            echo "Container failed to start within the timeout period"
            docker-compose logs
            exit 1
          fi

      - name: Wait for application to be ready
        run: |
          timeout=300
          until curl -s http://localhost:3000 > /dev/null || [ $timeout -eq 0 ]; do
            echo "Waiting for application to be ready..."
            sleep 5
            timeout=$((timeout-5))
            if [ $((timeout % 30)) -eq 0 ]; then
              docker-compose logs
            fi
          done
          if [ $timeout -eq 0 ]; then
            echo "Application failed to start within the timeout period"
            docker-compose logs
            exit 1
          fi
          echo "Application is ready!"

      - name: Sync database to host
        run: |
          docker cp $(docker-compose ps -q app):/app/prisma/dev.db ../../ai-test-management-db/dev.db